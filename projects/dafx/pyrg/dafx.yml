---
dafx:

  bus_width: 64

  rtl_path: "$GIT_ROOT/projects/dafx/rtl"
  uvm_path: "$GIT_ROOT/projects/dafx/tb/uvm_reg"
  sw_path:  "$GIT_ROOT/projects/dafx/sw"

  parameters:
    - GAIN_WIDTH_C
    - N_BITS_C
    - Q_BITS_C
    - AUDIO_WIDTH_C

  registers:

    - name:   hardware_version
      desc:   Hardware version
      access: RO
      bit_fields:
        - field: {
          name:        sr_hardware_version,
          description: Hardware version,
          size:        64,
          lsb_pos:     0
        }

    - name:   mixer_output_gain
      desc:   Mixer's output gain
      access: RW
      bit_fields:
        - field: {
          name:        cr_mix_output_gain,
          description: Mixer's output gain,
          size:        GAIN_WIDTH_C,
          lsb_pos:     0,
          reset_value: 1<<Q_BITS_C
        }

    - name:   mixer_channel_gain
      desc:   Mixer's input gain of the channels
      access: RW
      repeat: 4
      bit_fields:
        - field: {
          name:        cr_mix_channel_gain,
          description: Mixer's input gain of the channels,
          size:        GAIN_WIDTH_C,
          lsb_pos:     0,
          reset_value: 1<<Q_BITS_C
        }

    - name:   osc0_waveform_select
      desc:   Sets the waveform output
      access: RW
      bit_fields:
        - field: {
          name:        cr_osc0_waveform_select,
          description: Sets the waveform output,
          size:        2,
          lsb_pos:     0,
          reset_value: 0x0
        }

    - name:   osc0_frequency
      desc:   Sets the frequency
      access: RW
      bit_fields:
        - field: {
          name:        cr_osc0_frequency,
          description: Sets the frequency,
          size:        N_BITS_C,
          lsb_pos:     0,
          reset_value: 500<<Q_BITS_C
        }

    - name:   osc0_duty_cycle
      desc:   Sets the duty cycle of the square wave
      access: RW
      bit_fields:
        - field: {
          name:        cr_osc0_duty_cycle,
          description: Sets the duty cycle of the square wave,
          size:        N_BITS_C,
          lsb_pos:     0,
          reset_value: 500
        }

    - name:   cpu_led
      desc:   CPU LED
      access: RW
      bit_fields:
        - field: {
          name:        cr_cpu_led0,
          description: Turn on or off an LED,
          size:        1,
          lsb_pos:     0,
          reset_value: 0
        }
        - field: {
          name:        cr_cpu_led1,
          description: Turn on or off an LED,
          size:        1,
          lsb_pos:     1,
          reset_value: 0
        }

    - name:   cir_min_adc_amplitude
      desc:   Lowest value of the ADC
      access: RO
      bit_fields:
        - field: {
          name:        sr_cir_min_adc_amplitude,
          description: Lowest value of the ADC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }

    - name:   cir_max_adc_amplitude
      desc:   Highest value of the ADC
      access: RO
      bit_fields:
        - field: {
          name:        sr_cir_max_adc_amplitude,
          description: Highest value of the ADC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }

    - name:   cir_min_dac_amplitude
      desc:   Lowest value of the DAC
      access: RO
      bit_fields:
        - field: {
          name:        sr_cir_min_dac_amplitude,
          description: Lowest value of the DAC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }

    - name:   cir_max_dac_amplitude
      desc:   Highest value of the DAC
      access: RO
      bit_fields:
        - field: {
          name:        sr_cir_max_dac_amplitude,
          description: Highest value of the DAC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }

    - name:   clear_adc_amplitude
      desc:   Clears the max and min aplitude values
      access: WO
      bit_fields:
        - field: {
          name:        cmd_clear_adc_amplitude,
          description: Clears the max and min aplitude values,
          size:        1,
          lsb_pos:     0
        }

    - name:   clear_irq_0
      desc:   Clears the IRQ0 bit
      access: WO
      bit_fields:
        - field: {
          name:        cmd_clear_irq_0,
          description: Clears the IRQ0 bit,
          size:        1,
          lsb_pos:     0,
          reset_value: 0x0
        }

    - name:   clear_irq_1
      desc:   Clears the IRQ1 bit
      access: WO
      bit_fields:
        - field: {
          name:        cmd_clear_irq_1,
          description: Clears the IRQ1 bit,
          size:        1,
          lsb_pos:     0,
          reset_value: 0x0
        }

    - name:   mix_out_left
      desc:   Current left value forwarded to the DAC
      access: RO
      bit_fields:
        - field: {
          name:        sr_mix_out_left,
          description: Current left value forwarded to the DAC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }

    - name:   mix_out_right
      desc:   Current right value forwarded to the DAC
      access: RO
      bit_fields:
        - field: {
          name:        sr_mix_out_right,
          description: Current right value forwarded to the DAC,
          size:        AUDIO_WIDTH_C,
          lsb_pos:     0
        }